name: 文档自动部署

on:
  push:
    branches:
      - main  # 或者是您的主分支名称，如 master

# 设置权限
permissions:
  contents: write

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 需要完整历史记录以便 gh-pages 正常工作

      - name: 安装 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: 获取 pnpm 缓存目录
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 设置 pnpm 缓存
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 安装依赖
        run: pnpm install

      - name: 设置 Git 用户信息
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 新增步骤：配置 Git 使用 Token 进行认证
      - name: 配置 Git 认证
        run: git remote set-url origin https://github-actions:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        # 或者使用 'insteadOf' 配置 (任选其一)
        # run: git config --global url."https://github-actions:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: 生成并部署文档
        run: |
          pnpm docs:deploy
        env:
          # 传递 Token 可能仍然是 gh-pages 内部某些逻辑需要的，保留它
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 你也可以尝试传递 GITHUB_TOKEN，有些工具可能优先识别这个名字
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
